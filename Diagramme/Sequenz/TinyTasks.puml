@startuml TinyTasks

actor TinyTaskServices

participant "Program" as program
participant "manager : Workers" as manager
participant "workers : IDictionary" as workers
participant "DefaultWorker" as default 
participant "worker : SyncWorker" as worker
participant "preferences : PreferenceSet" as preferences

activate TinyTaskServices
TinyTaskServices -> program
activate program

program -> manager : new Workers(configuration)
activate manager
manager --> program
deactivate manager

program -> workers : new Dictionary<Guid, IWorker>()
activate workers
workers --> program
deactivate workers

program-> manager : Load(workers)
activate manager
loop foreach entry in config

    manager -> default : <u>Instantiate(clazz, group, label)</u>

    activate default
    'default --> manager: worker
    'deactivate default
    
    default -> worker : new()
    activate worker

    worker -> preferences : new PreferenceSet()
    activate preferences
    preferences --> worker
    deactivate preferences

    group example
        worker -> preferences : Preference<Type>(name)
        activate preferences
        preferences --> worker : return preference
        deactivate preferences
    end

    worker --> default : worker
    deactivate worker

    default --> manager : worker
    deactivate default

    manager -> worker : LoadPreferences(payload)
    activate worker
    worker -> preferences : Load(stream)
    activate preferences
    preferences --> worker
    deactivate preferences
    worker --> manager
    deactivate worker
end

manager --> program
deactivate manager

loop foreach loaded worker
    program --> worker : StartWorker()
    activate worker
    worker --> program
    deactivate worker
end

deactivate program
@enduml