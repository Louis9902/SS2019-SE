@startuml Classes
top to bottom direction

!define file String {File, Directory}

package app.common {
    class Entrypoint {
        {static} -manager: WorkerManager
        {static} +void Main(args: string[])
    }

    class WorkerTypeRegister <<static>> {
        +int Register(register: Directory<Long, Type>)
    }

    class WorkerManager {
        -variety: Directory<Long, Type>
        -storage: String {File}
        -workers: Directory<Guid, Worker>

        +WorkerManager(variety: Directory<Long, Type>, storage: String)

        +bool StartWorkers()
        +bool AbortWorkers()
        +Worker CreateWorker(id: Guid)
    }

    abstract class Worker {
        #manager: WorkerManager
        -identifier: Guid

        #Worker(identifier: Guid, manager: WorkerManager)

        {abstract} +bool Start(reader: TextReader)
        {abstract} +bool Abort(writer: TextWriter)
    }

    class BackupWorker extends Worker {
        -source: file
        -target: file
        -observer: FileObserver

        +BackupWorker(identifier: Guid, manager: WorkerManager, source: String, target: String)

        +bool Start(TextReader reader)
        +bool Abort(TextWriter writer)
    }

    class FileObserver {
        +<<get>> Changes: List<String>
        -target: file

        +FileObserver(file: String)
    }
}

package app.window {
    class UserInterface {
    }
}

Entrypoint "1" -- "1" WorkerTypeRegister :  registers worker varieties >
Entrypoint "1" -- "1" WorkerManager : starts with varieties and data input >
WorkerManager "1" -- "n" Worker : manages >
BackupWorker "1" -- "1" FileObserver : keeps track of files >

WorkerManager ---0)-- UserInterface : storage

@enduml